"""empty message

Revision ID: 502e1dbe107f
Revises: 
Create Date: 2025-02-10 13:30:38.064631

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '502e1dbe107f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('guest', 'local', 'social', name='usertypeenum').create(op.get_bind())
    op.create_table('category',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('user_type', postgresql.ENUM('guest', 'local', 'social', name='usertypeenum', create_type=False), nullable=True),
    sa.Column('social_provider', postgresql.ENUM('naver', 'kakao', name='socialproviderenum', create_type=False), nullable=True),
    sa.Column('service_policy_agreement', sa.Boolean(), nullable=False),
    sa.Column('privacy_policy_agreement', sa.Boolean(), nullable=False),
    sa.Column('third_party_information_agreement', sa.Boolean(), nullable=False),
    sa.Column('joined_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.sync_enum_values(
        enum_schema='public',
        enum_name='socialproviderenum',
        new_values=['naver', 'kakao'],
        affected_columns=[TableReference(table_schema='public', table_name='user', column_name='social_provider')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='socialproviderenum',
        new_values=['naver', 'kakao', 'anonymous'],
        affected_columns=[TableReference(table_schema='public', table_name='user', column_name='social_provider')],
        enum_values_to_rename=[],
    )
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    sa.Enum('guest', 'local', 'social', name='usertypeenum').drop(op.get_bind())
    # ### end Alembic commands ###
