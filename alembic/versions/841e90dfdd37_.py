"""empty message

Revision ID: 841e90dfdd37
Revises: 9ed31dcb7da7
Create Date: 2025-04-02 13:48:35.612462

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "841e90dfdd37"
down_revision: Union[str, None] = "9ed31dcb7da7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_hall_venues")
    op.add_column(
        "products",
        sa.Column(
            "thumbnail_url",
            sqlmodel.sql.sqltypes.AutoString(length=500),
            nullable=False,
        ),
    )
    op.drop_column("products", "thumbnail")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "products",
        sa.Column(
            "thumbnail", sa.VARCHAR(length=500), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("products", "thumbnail_url")
    op.create_table(
        "product_hall_venues",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("product_hall_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "wedding_interval", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("wedding_times", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "wedding_type", sa.VARCHAR(length=10), autoincrement=False, nullable=False
        ),
        sa.Column("hall_styles", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("hall_types", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "guaranteed_min_count", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("min_capacity", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("max_capacity", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("basic_price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "peak_season_price", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("ceiling_height", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "virgin_road_length", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("include_drink", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("include_alcohol", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "include_service_fee", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("include_vat", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "bride_room_entry_methods",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "bride_room_makeup_room", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("food_menu", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "food_cost_per_adult", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "food_cost_per_child", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "banquet_hall_running_time",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "banquet_hall_max_capacity",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "additional_info",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "special_notes", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_datetime",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_datetime",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "deleted_datetime",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["product_hall_id"],
            ["product_halls.id"],
            name="product_hall_venues_product_hall_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="product_hall_venues_pkey"),
    )
    # ### end Alembic commands ###
