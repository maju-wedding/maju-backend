"""empty message

Revision ID: 9ed31dcb7da7
Revises: 30f135dfc02d
Create Date: 2025-04-02 12:49:18.834344

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9ed31dcb7da7'
down_revision: Union[str, None] = '30f135dfc02d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('suggest_search_keywords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keyword', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('product_hall_venues')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_hall_venues',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_hall_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('wedding_interval', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wedding_times', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('wedding_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('hall_styles', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hall_types', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('guaranteed_min_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('basic_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('peak_season_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ceiling_height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('virgin_road_length', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('include_drink', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('include_alcohol', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('include_service_fee', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('include_vat', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('bride_room_entry_methods', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bride_room_makeup_room', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('food_menu', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('food_cost_per_adult', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('food_cost_per_child', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('banquet_hall_running_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('banquet_hall_max_capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('additional_info', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('special_notes', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_hall_id'], ['product_halls.id'], name='product_hall_venues_product_hall_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_hall_venues_pkey')
    )
    op.drop_table('suggest_search_keywords')
    # ### end Alembic commands ###
