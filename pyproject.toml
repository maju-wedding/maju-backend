[tool.poetry]
name = "reborn-backend"
version = "0.1.0"
description = ""
authors = ["PrimadonnaGit <jwhyun2215@gmail.com>"]
readme = "README.md"
packages = [
    { include = "src"},
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.8"
uvicorn = "^0.34.0"
python-multipart = "^0.0.20"
email-validator = "^2.1.0.post1"
passlib = { extras = ["bcrypt"], version = "^1.7.4" }
pydantic = ">2.0"

gunicorn = "^22.0.0"
alembic = "^1.12.1"
httpx = "^0.25.1"
sqlmodel = "^0.0.19"
# Pin bcrypt until passlib supports the latest
bcrypt = "4.0.1"
pydantic-settings = "^2.2.1"
sentry-sdk = { extras = ["fastapi"], version = "^1.40.6" }
pyjwt = "^2.8.0"
aiohttp = "^3.9.5"
python-dateutil = "^2.9.0.post0"
fastcrud = "^0.15.5"
aiosqlite = "^0.21.0"
greenlet = "^3.1.1"
asyncpg = "^0.30.0"
alembic-postgresql-enum = "^1.6.1"
loguru = "^0.7.3"
orjson = "^3.10.15"
sqladmin = "^0.20.1"
itsdangerous = "^2.2.0"
psycopg2-binary = "^2.9.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.2"
black = "^25.1.0"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
    "I001", # isort: imports are incorrectly sorted
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = "asyncio"
asyncio_default_fixture_loop_scope="function"
